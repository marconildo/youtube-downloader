<?xml version="1.0" encoding="utf-8" ?>
<objects xmlns="http://www.springframework.net" xmlns:aop="http://www.springframework.net/aop">

    <!--###############################################-->
    <!--Providers Nativos-->
    <!--###############################################-->

    <!--RabbitMQ-->
    <!--###############################################-->
    <object name="RabbitMQ_ConnectionFactory" type="RabbitMQ.Client.ConnectionFactory, RabbitMQ.Client">
        <property name="Uri" ref="CONFIG:DevWeek:RabbitMQ:ConnectionString" />
        <property name="AutomaticRecoveryEnabled" value="true"  />
        <property name="NetworkRecoveryInterval" value="00:00:10"  />
    </object>
    <object name="RabbitMQ_Connection" factory-object="RabbitMQ_ConnectionFactory" factory-method="CreateConnection" singleton="false" ></object>
    <object name="RabbitMQ_Model" type="RabbitMQ.Client.IModel, RabbitMQ.Client" factory-object="RabbitMQ_Connection" factory-method="CreateModel" singleton="false"></object>


    <!--Redis-->
    <!--###############################################-->
    <object name="RedisClient" type="StackExchange.Redis.ConnectionMultiplexer, StackExchange.Redis.StrongName" factory-method="Connect">
        <constructor-arg name="configuration" ref="CONFIG:DevWeek:Redis:ConnectionString" />
        <constructor-arg name="log" >
            <null />
        </constructor-arg>
    </object>

    <!--MongoDB-->
    <!--###############################################-->
    <object name="MongoClient" type="MongoDB.Driver.MongoClient, MongoDB.Driver">
        <constructor-arg name="connectionString" ref="CONFIG:DevWeek:MongoDB:ConnectionString" />
    </object>

    <!--S3-->
    <!--###############################################-->
    <object type="Minio.MinioClient, Minio">
        <constructor-arg name="endpoint" ref="CONFIG:DevWeek:S3:Endpoint" />
        <constructor-arg name="accessKey" ref="CONFIG:DevWeek:S3:AccessKey" />
        <constructor-arg name="secretKey" ref="CONFIG:DevWeek:S3:SecretKey" />
        <constructor-arg name="region" value="" />
    </object>

    <!--###############################################-->
    <!--Pipeline (simples)-->
    <!--###############################################-->
    <object type="DevWeek.Services.ResourceBootstrapService" autowire="constructor" init-method="Check">
        <property name="LockTimeout" value="00:00:30" />
        <property name="MongoRequiredCollections" value="media_download" />
        <property name="MinioBucketNames" >
            <object type="string[]" >
                <constructor-arg value="2" />
                <property name="[0]" ref="CONFIG:DevWeek:S3:AudioBucketName" />
                <property name="[1]" ref="CONFIG:DevWeek:S3:VideoBucketName" />
            </object>
        </property>
        <property name="DistributedLockKey" value="init-infrastructure-lock" />
    </object>

    <object name="DistributedLockService" type="DevWeek.Services.DistributedLockService, DevWeek.Services" autowire="constructor">
        <property name="WaitingLockCycle" value="00:00:00.200"></property>
    </object>


    <object type="DevWeek.Services.DataService, DevWeek.Services"  autowire="constructor">
        <constructor-arg name="redis" ref="RedisClient"/>
        <constructor-arg name="mongoClient" ref="MongoClient"/>
        <constructor-arg name="distributedLockService" ref="DistributedLockService"/>
        <constructor-arg name="redisDownloadListKey" ref="CONFIG:DevWeek:Redis:DownloadListKey"/>
        <constructor-arg name="mongoDownloadCollectionName" ref="CONFIG:DevWeek:MongoDB:MongoDownloadCollectionName"/>
    </object>

    <object name="Local:RabbitMQClient" type="DevWeek.Architecture.MessageQueuing.RabbitMQClient, DevWeek.Services">
        <property name="ConnectionPool">
            <object type="DevWeek.Architecture.MessageQueuing.RabbitMQConnectionPool, DevWeek.Services">
                <constructor-arg index="0" ref="RabbitMQ_ConnectionFactory" />
            </object>
        </property>
    </object>


    <object name="IngestionPipeline" type="DevWeek.Architecture.Workflow.QueuedWorkFlow.QueuedStateMachine, DevWeek.Services" >
        <property name="QueueClient" ref="Local:RabbitMQClient" />
        <property name="CreateZombieQueues" value="true" />
        <property name="MessageRejectionHandler" >
            <object type="DevWeek.Architecture.MessageQueuing.MessageDeserializationRejectionHandler, DevWeek.Services">
                <property name="RabbitMQClient" ref="Local:RabbitMQClient"/>
                <property name="ExchangeName" ref="CONFIG:DevWeek:RabbitMQ:DownloadPipeline:Exchange" />
                <property name="RejectionRoutingKey" value="MessageRejected" />
            </object>
        </property>
        <property name="Transitions">
            <list element-type="DevWeek.Architecture.Workflow.QueuedWorkFlow.QueuedTransition, DevWeek.Services">

                <object type="DevWeek.Architecture.Workflow.QueuedWorkFlow.QueuedTransition, DevWeek.Services">
                    <property name="Origin" value="DownloadRequest" />
                    <property name="Destination" value="RequestStored" />
                    <property name="LogicalQueueName" value="RequestStore" />
                    <property name="ExchangeName" ref="CONFIG:DevWeek:RabbitMQ:DownloadPipeline:Exchange" />
                    <property name="ConsumerCountManager" >
                        <object type="DevWeek.Architecture.MessageQueuing.ConsumerCountManager, DevWeek.Services">
                            <property name="MinConcurrentConsumers" value="1" />
                            <property name="MaxConcurrentConsumers" value="10" />
                            <property name="AutoscaleFrequency" value="00:01:00" />
                            <property name="MessagesPerConsumerWorkerRatio" value="1" />
                        </object>
                    </property>
                    <property name="ServiceMethod" value="ExecuteAsync" />
                    <property name="Service"  >
                        <object type="DevWeek.Services.Downloader.EntryPointRegisterPipelineActivity, DevWeek.Services" autowire="constructor"></object>
                    </property>
                    <property name="ErrorFlowStrategy" value="SendToErrorQueue" />
                </object>

                <object type="DevWeek.Architecture.Workflow.QueuedWorkFlow.QueuedTransition, DevWeek.Services">
                    <property name="Origin" value="RequestStored" />
                    <property name="Destination" value="MetadataDownloaded" />
                    <property name="LogicalQueueName" value="MetadataDownloader" />
                    <property name="ExchangeName" ref="CONFIG:DevWeek:RabbitMQ:DownloadPipeline:Exchange" />
                    <property name="ConsumerCountManager" >
                        <object type="DevWeek.Architecture.MessageQueuing.ConsumerCountManager, DevWeek.Services">
                            <property name="MinConcurrentConsumers" value="1" />
                            <property name="MaxConcurrentConsumers" value="10" />
                            <property name="AutoscaleFrequency" value="00:01:00" />
                            <property name="MessagesPerConsumerWorkerRatio" value="1" />
                        </object>
                    </property>
                    <property name="ServiceMethod" value="ExecuteAsync" />
                    <property name="Service">
                        <object type="DevWeek.Services.Downloader.MetadataDiscoveryPipelineActivity, DevWeek.Services" autowire="constructor"></object>
                    </property>
                    <property name="ErrorFlowStrategy" value="SendToErrorQueue" />
                </object>

                <object type="DevWeek.Architecture.Workflow.QueuedWorkFlow.QueuedTransition, DevWeek.Services">
                    <property name="Origin" value="MetadataDownloaded" />
                    <property name="Destination" value="VideoDownloaded" />
                    <property name="LogicalQueueName" value="MediaDownloader" />
                    <property name="ExchangeName" ref="CONFIG:DevWeek:RabbitMQ:DownloadPipeline:Exchange" />
                    <property name="ConsumerCountManager" >
                        <object type="DevWeek.Architecture.MessageQueuing.ConsumerCountManager, DevWeek.Services">
                            <property name="MinConcurrentConsumers" value="1" />
                            <property name="MaxConcurrentConsumers" value="10" />
                            <property name="AutoscaleFrequency" value="00:01:00" />
                            <property name="MessagesPerConsumerWorkerRatio" value="1" />
                        </object>
                    </property>
                    <property name="ServiceMethod" value="ExecuteAsync" />
                    <property name="Service">
                        <object type="DevWeek.Services.Downloader.VideoDownloaderPipelineActivity, DevWeek.Services" autowire="constructor">
                          <property name="SharedPath" value="/shared/" />
                          <property name="MetadataExtractors">
                            <list element-type="DevWeek.Services.Downloader.MediaDownloader.IMetadataExtractor, DevWeek.Services">
                              <object type="DevWeek.Services.Downloader.MediaDownloader.GenericOutputMetadataExtractor, DevWeek.Services">
                                <property name="StartsWith" value="[download] " />
                                <property name="EndsWith" value=" has already been downloaded and merged" />
                              </object>
                              <object type="DevWeek.Services.Downloader.MediaDownloader.GenericOutputMetadataExtractor, DevWeek.Services">
                                <property name="StartsWith">
                                  <value><![CDATA[[ffmpeg] Merging formats into "]]></value>
                                </property>
                                <property name="EndsWith">
                                  <value><![CDATA["]]></value>
                                </property>
                              </object>
                              <object type="DevWeek.Services.Downloader.MediaDownloader.GenericOutputMetadataExtractor, DevWeek.Services">
                                <property name="StartsWith" value="[ffmpeg] Merging formats into" />
                                <property name="EndsWith">
                                  <value><![CDATA[(["'])(?:(?=(\\?))\2.)*?\1]]></value>
                                </property>
                              </object>
                            </list>
                          </property>
                        </object>
                    </property>
                    <property name="ErrorFlowStrategy" value="SendToErrorQueue" />
                </object>

                <object type="DevWeek.Architecture.Workflow.QueuedWorkFlow.QueuedTransition, DevWeek.Services">
                    <property name="Origin" value="VideoDownloaded" />
                    <property name="Destination" value="AudioEncoded" />
                    <property name="LogicalQueueName" value="MediaDownloader" />
                    <property name="ExchangeName" ref="CONFIG:DevWeek:RabbitMQ:DownloadPipeline:Exchange" />
                    <property name="ConsumerCountManager" >
                        <object type="DevWeek.Architecture.MessageQueuing.ConsumerCountManager, DevWeek.Services">
                            <property name="MinConcurrentConsumers" value="1" />
                            <property name="MaxConcurrentConsumers" value="10" />
                            <property name="AutoscaleFrequency" value="00:02:00" />
                            <property name="MessagesPerConsumerWorkerRatio" value="1" />
                        </object>
                    </property>
                    <property name="ServiceMethod" value="ExecuteAsync" />
                    <property name="Service">
                        <object type="DevWeek.Services.Downloader.AudioEncoderPipelineActivity, DevWeek.Services" autowire="constructor">
                            <property name="SharedPath" value="/shared/" />
                            <property name="MetadataExtractors">
                                <list element-type="DevWeek.Services.Downloader.MediaDownloader.IMetadataExtractor, DevWeek.Services">
                                    <object type="DevWeek.Services.Downloader.MediaDownloader.GenericOutputMetadataExtractor, DevWeek.Services">
                                        <property name="StartsWith" value="[download] " />
                                        <property name="EndsWith" value=" has already been downloaded and merged" />
                                    </object>
                                    <object type="DevWeek.Services.Downloader.MediaDownloader.GenericOutputMetadataExtractor, DevWeek.Services">
                                        <property name="StartsWith">
                                            <value><![CDATA[[ffmpeg] Merging formats into "]]></value>
                                        </property>
                                        <property name="EndsWith">
                                            <value><![CDATA["]]></value>
                                        </property>
                                    </object>
                                    <object type="DevWeek.Services.Downloader.MediaDownloader.GenericOutputMetadataExtractor, DevWeek.Services">
                                        <property name="StartsWith" value="[ffmpeg] Merging formats into" />
                                        <property name="EndsWith">
                                            <value><![CDATA[(["'])(?:(?=(\\?))\2.)*?\1]]></value>
                                        </property>
                                    </object>
                                </list>
                            </property>
                        </object>
                    </property>
                    <property name="ErrorFlowStrategy" value="SendToErrorQueue" />
                </object>

                <object type="DevWeek.Architecture.Workflow.QueuedWorkFlow.QueuedTransition, DevWeek.Services">
                    <property name="Origin" value="AudioEncoded" />
                    <property name="Destination" value="MediaStored" />
                    <property name="LogicalQueueName" value="MediaStore" />
                    <property name="ExchangeName" ref="CONFIG:DevWeek:RabbitMQ:DownloadPipeline:Exchange" />
                    <property name="ConsumerCountManager" >
                        <object type="DevWeek.Architecture.MessageQueuing.StaticConsumerCountManager, DevWeek.Services">
                            <!--<property name="MinConcurrentConsumers" value="1" />-->
                            <property name="MaxConcurrentConsumers" value="50" />
                            <!--<property name="AutoscaleFrequency" value="00:01:00" />-->
                            <!--<property name="MessagesPerConsumerWorkerRatio" value="1" />-->
                        </object>
                    </property>
                    <property name="ServiceMethod" value="ExecuteAsync" />
                    <property name="Service">
                        <object type="DevWeek.Services.Downloader.S3MediaUploaderPipelineActivity, DevWeek.Services" autowire="constructor">
                            <property name="AudioBucketName" ref="CONFIG:DevWeek:S3:AudioBucketName" />
                            <property name="VideoBucketName" ref="CONFIG:DevWeek:S3:VideoBucketName" />
                        </object>
                    </property>
                    <property name="ErrorFlowStrategy" value="SendToErrorQueue" />
                </object>

                <object type="DevWeek.Architecture.Workflow.QueuedWorkFlow.QueuedTransition, DevWeek.Services">
                    <property name="Origin" value="MediaStored" />
                    <property name="Destination" value="Finished" />
                    <property name="LogicalQueueName" value="Cleanup" />
                    <property name="ExchangeName" ref="CONFIG:DevWeek:RabbitMQ:DownloadPipeline:Exchange" />
                    <property name="ConsumerCountManager" >
                        <object type="DevWeek.Architecture.MessageQueuing.ConsumerCountManager, DevWeek.Services">
                            <property name="MinConcurrentConsumers" value="1" />
                            <property name="MaxConcurrentConsumers" value="100" />
                            <property name="AutoscaleFrequency" value="00:01:00" />
                            <property name="MessagesPerConsumerWorkerRatio" value="1" />
                        </object>
                    </property>
                    <property name="ServiceMethod" value="ExecuteAsync" />
                    <property name="Service">
                        <object type="DevWeek.Services.Downloader.CleanupPipelineActivity, DevWeek.Services"  autowire="constructor"></object>
                    </property>
                    <property name="ErrorFlowStrategy" value="SendToErrorQueue" />
                </object>

            </list>
        </property>
    </object>

</objects>